syntax = "proto3";

package open_source.v1;

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/any.proto";

option go_package = "collect_open_source_data/api/open_source/v1;v1";
option java_multiple_files = true;
option java_package = "open_source.v1";

service OpenSource {
	rpc GetLanguage (LanguageRequest) returns (LanguageReply){
		option (google.api.http) = {
			get: "/language"
		};
	}
	rpc GetOwner(OwnerRequest) returns (OwnerReply){
		option (google.api.http) = {
      get: "/owner"
    };
  }
	rpc GetRepo(RepoRequest) returns (RepoReply){
		option (google.api.http) = {
      post: "/repo"
			body: "*"
    };
	}
	rpc GetRepoCategory(RepoCategoryRequest) returns (RepoCategoryReply){
		option (google.api.http) = {
      get: "/repo/category"
    };
	}

	rpc GetRepoByCategory(RepoByCategoryRequest) returns (RepoByCategoryReply){
		option (google.api.http) = {
			get: "/repo/bycategory"
		};
	}

	rpc GetRepoMeasure(RepoMeasureRequest) returns (RepoMeasureReply){
		option (google.api.http) = {
      get: "/repo/measure"
    };
  }

	rpc RepoFav (RepoFavRequest) returns (RepoFavReply){
			option (google.api.http) = {
      put: "/repo/fav"
			body: "*"
    };
	}
}

message RepoFavRequest {
	// 仓库id
	repeated int64 repoIds = 1;
	// 是否收藏 0是收藏, 1 是取消收藏
	int32 isFav = 2;
}

message RepoFavReply {

}

message RepoMeasureRequest {
	// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	// 指标类型 0: star 1: fork 2: watch 3: issue
	int32 type = 3;
	// 日期类型 0: day 1: week 2: month
	int32 dateType = 4;
	// 天数
	int32 num = 5;
}

message RepoMeasureReply {
	// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	// 总条数
	int64 total = 3;
	// 开源仓库信息
	repeated RepoInfo repos = 4;
}

message RepoInfo {
	// 仓库id
	int64     id = 1;
	// 仓库名称
	string    name = 2;
	// 仓库全称
	string    fullName = 3;
	// 仓库图片
	string    image = 4;
	// 仓库所有者ID
	int64     ownerId = 5;
	// 仓库所有者名称
	string     ownerName = 6;
	// 是否私有
	bool      private = 7;
	// 仓库中文描述
	string    desc = 8;

	// 仓库英文描述
	string descEn = 9;
	// 库主页 URL
	string    htmlUrl = 10;
	// 仓库主页 URL
	string    homepage = 11;
	// 克隆 URL
	string    cloneUrl = 12;
	// 仓库星标数量
	int64     stargazersCount = 13;
	// 仓库关注者数量
	int64     watchersCount = 14;
	// 仓库语言名称
	string    language = 15;
	// 仓库语言ID
	int64    languageId = 16;
	// 仓库分支数量
	int64     forksCount = 17;
	// 仓库问题数量
	int64     openIssuesCount = 18;
	// 仓库主题
	repeated  string    topics = 19;
	// 仓库问题数量
	int64     openIssues = 20;
	// 仓库关注者数量
	int64     watchers = 21;
	// 仓库默认分支
	string    defaultBranch = 22;
	// 仓库评分
	int64     score = 23;
	// 仓库大小
	int64     size = 24;
	// 仓库分支数量
	int64     forks = 25;
	// 是否收藏
	bool      isFav = 26;
	// 仓库创建时间
	string    createdAt = 27;
	// 更新时间
	string    updatedAt = 28;
}

// 查询条件
message QueryFilter {
	// 筛选值
	int32 targetValue = 1;
	enum Operator {
		// 等于
		GT = 0;
		// 大于等于
		GTE = 1;
		// 小于
		LT = 2;
		// 小于等于
		LTE = 3;
	}
	// 操作符
	Operator op = 2;
	// 筛选字段
	string field = 3;
}

// 排序条件
message SortOrder{
	// 排序方式
	enum Order {
		// 升序
    ASC = 0;
		// 降序
    DESC = 1;
  }
	// 排序方式
  Order order = 1;
	// 排序字段
  string field = 2;
}

message RepoRequest {
	// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	// 创库名
  string name = 3;
	// 仓库描述
  string desc = 4;
	// 仓库语言ID
  int64 languageId = 5;
	// 仓库所有者ID
  int64 ownerId = 6;
	// 仓库id
	int64  ID = 7;
	// 筛选条件
	repeated QueryFilter filters = 8;
	// 排序条件
	SortOrder sort = 9;
}

message RepoReply {
	// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	int64 total = 3;
	// 开源仓库信息
	repeated RepoInfo repos = 4;
}

message RepoByCategoryRequest {
	// 分页
  int32 pageNum = 1;
  // 每页数量
  int32 pageSize = 2;
  // 分类id
  int64  id = 3 [(validate.rules).int64 = {gt: 0}];

}

message RepoByCategoryReply{
	// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	int64 total = 3;
	// 开源仓库信息
	repeated RepoInfo repos = 4;
}

message OwnerInfo {
	// id
	int64 id = 1;
	// 头像URL
	string avatarUrl= 2;
	// 用户类型：User / Organization
	string type= 3;
	// 用户登录名
	string login= 4;
	// 用户主页URL
	string htmlUrl= 5;
	// 用户名
	string name= 6;
	// 用户邮箱
	string email= 7;
	// 用户简介
	string bio= 8;
	// 用户仓库数量
	int64  publicRepos= 9;
	// 用户公开代码片段数量
	int64  publicGists= 10;
	// 用户粉丝数量
	int64  followers= 11;
	// 用户关注的人数量
	int64  following= 12;
	//用户注册时间
	string createdAt= 13;
	// 用户更新时间
	string updatedAt= 14;     // 更新时间
}

message OwnerRequest {
	// 分页
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	// 用户名
  string name = 3;
	// 类型：User / Organization
	string type = 4;
	// 用户邮箱
	string email = 5;
	// 用户id
	int64  ID = 6;
}

message OwnerReply {
	// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	int64 total = 3;
	// 开源仓库信息
	repeated OwnerInfo owners = 4;
}

message LanguageInfo {
	// 语言id
	int64 id = 1;
	// 语言名称
	string name = 2;
	// 语言描述
	string description = 3;
	// 语言连接
	string imageUrl = 4;
	// 语言仓库地址
	string repoUrl = 5;
	// 语言简介
	string bio = 6;
}

message LanguageRequest {
	// 分页
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	// 语言id
	int64  ID = 3;
	// 语言名称
	string name = 4;
}

message LanguageReply {
		// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	int64 total = 3;
		// 语言信息
		repeated LanguageInfo languages = 4;
}

message CommonReply {
	int32 code = 1;
	string message = 2;
	google.protobuf.Any data = 3;
};

message RepoCategoryRequest {
	// 分页
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	// 分类名称
	string name = 4;
	// 分类id
	int64  ID = 3;
}

message RepoCategoryInfo {
	// 分类id
  int64 id = 1;
  // 分类名称
  string name = 2;
  // 分类描述
  string description = 3;
  // 分类的图片
	string imageUrl = 4;
}

message RepoCategoryReply {
	// 分页信息
	int32 pageNum = 1;
	// 每页数量
	int32 pageSize = 2;
	int64 total = 3;
	// 语言信息
	repeated RepoCategoryInfo category = 4;
}