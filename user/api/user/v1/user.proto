syntax = "proto3";

package user.v1;

import "validate/validate.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";

option go_package = "user/user/v1;v1";
option java_multiple_files = true;
option java_package = "user.v1";

service User {
	rpc Verify (VerifyRequest) returns (VerifyReply){
		option (google.api.http) = {
        post: "/v1/verify"
        body: "*"
      };
	}

	rpc Register (RegisterRequest) returns (RegisterReply){
		option (google.api.http) = {
        post: "/v1/register"
        body: "*"
      };
			}

	rpc Login (LoginRequest) returns (LoginReply){
		  option (google.api.http) = {
        post: "/v1/login"
        body: "*"
      };
	}

	rpc UpdateUser (UpdateUserRequest) returns (UpdateUserReply){
		  option (google.api.http) = {
        put: "/v1/user"
        body: "*"
      };
	}

	rpc GetUser (GetUserRequest) returns (GetUserReply){
		option (google.api.http) = {
        get: "/v1/user"
      };
	}

	rpc ListUser (ListUserRequest) returns (ListUserReply){
		option (google.api.http) = {
        get: "/v1/user/list"
      };
	}
}


message VerifyRequest {
	string email = 1 [(validate.rules).string ={min_len: 1}];
}

message VerifyReply {
	bool success = 1;
}

// 创建用户信息
message RegisterRequest {
	string nickname = 1 [(validate.rules).string ={min_len: 5, max_len: 15}];
	string password = 2 [(validate.rules).string ={min_len: 8, max_len: 15}];
	string email = 3 [(validate.rules).string ={min_len: 1}];
	string phone = 4 [(validate.rules).string ={min_len: 11, max_len: 11}];
	string verificationCode = 5 [(validate.rules).string ={min_len: 6, max_len: 6}];
}

// 用户信息返回
message RegisterReply {
	int64 uid = 1;
}

message LoginRequest {
	string username = 1 [(validate.rules).string ={min_len: 5, max_len: 15}];
	string password = 2 [(validate.rules).string ={min_len: 8, max_len: 15}];
}

message LoginReply {
	int64 uid = 1;
  string token = 2;
}

message UpdateUserRequest {
	string nickname = 1;
	string password = 2;
	string avatar = 3;
	int32 gender = 4;
	string phone = 5;
	int32 status = 6;
}
message UpdateUserReply {
	int64 uid = 1;
	string token = 2;
}

message GetUserRequest {
}
message GetUserReply {
	int64 uid = 1;
  string username = 2;
  string email = 3;
	string phone = 4;
  string avatar = 5;
  int32 gender = 6;
}

message ListUserRequest {
	int32 page = 1;
  int32 size = 2;
}
message ListUserReply {
	int32 total = 1;
	repeated GetUserReply users = 2;
}