# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: User API
    version: 0.0.1
paths:
    /login:
        post:
            tags:
                - User
            operationId: User_Login
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/LoginRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoginReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /refresh_token:
        get:
            tags:
                - User
            operationId: User_RefreshToken
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RefreshTokenReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /register:
        post:
            tags:
                - User
            operationId: User_Register
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/RegisterRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/RegisterReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user:
        get:
            tags:
                - User
            operationId: User_GetUser
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/GetUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        put:
            tags:
                - User
            operationId: User_UpdateUser
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/UpdateUserRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/UpdateUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
        delete:
            tags:
                - User
            operationId: User_DeleteUser
            parameters:
                - name: email
                  in: query
                  description: 邮箱
                  schema:
                    type: string
                - name: verificationCode
                  in: query
                  description: 邮箱验证码
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/DeleteUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /user/list:
        get:
            tags:
                - User
            operationId: User_ListUser
            parameters:
                - name: page
                  in: query
                  schema:
                    type: integer
                    format: int32
                - name: size
                  in: query
                  schema:
                    type: integer
                    format: int32
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/ListUserReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
    /verify:
        post:
            tags:
                - User
            operationId: User_Verify
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/VerifyRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/VerifyReply'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Status'
components:
    schemas:
        DeleteUserReply:
            type: object
            properties: {}
        GetUserReply:
            type: object
            properties:
                uid:
                    type: string
                    description: 用户ID
                nickname:
                    type: string
                    description: 昵称
                username:
                    type: string
                    description: 用户名
                email:
                    type: string
                    description: 邮箱
                phone:
                    type: string
                    description: 手机号
                avatar:
                    type: string
                    description: 头像
                gender:
                    type: integer
                    description: 性别 0:保密 1:男 2:女
                    format: int32
                desc:
                    type: string
                    description: 描述
        GoogleProtobufAny:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        ListUserReply:
            type: object
            properties:
                total:
                    type: integer
                    format: int32
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/GetUserReply'
        LoginReply:
            type: object
            properties:
                uid:
                    type: string
                    description: 用户ID
                accessToken:
                    type: string
                    description: token
                avatar:
                    type: string
                    description: 头像
                nickname:
                    type: string
                    description: 昵称
                username:
                    type: string
                    description: 用户名
                refreshToken:
                    type: string
                    description: refreshToken
                expires:
                    type: string
                    description: 过期时间
                phone:
                    type: string
                    description: 手机号
                email:
                    type: string
                    description: 邮箱
                gender:
                    type: integer
                    description: 性别 0:保密 1:男 2:女
                    format: int32
                desc:
                    type: string
                    description: 描述
            description: 登录返回数据
        LoginRequest:
            type: object
            properties:
                username:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
            description: 登录请求
        RefreshTokenReply:
            type: object
            properties:
                accessToken:
                    type: string
                    description: token
                refreshToken:
                    type: string
                    description: refreshToken
                expires:
                    type: string
                    description: 过期时间
            description: 刷新token
        RegisterReply:
            type: object
            properties: {}
            description: 注册信息返回
        RegisterRequest:
            type: object
            properties:
                username:
                    type: string
                    description: 用户名
                password:
                    type: string
                    description: 密码
                email:
                    type: string
                    description: 邮箱
                phone:
                    type: string
                    description: 手机号
                verificationCode:
                    type: string
                    description: 验证码
            description: 注册信息
        Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/GoogleProtobufAny'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        UpdateUserReply:
            type: object
            properties:
                uid:
                    type: string
                    description: 用户ID
                accessToken:
                    type: string
                    description: token
                avatar:
                    type: string
                    description: 头像
                nickname:
                    type: string
                    description: 昵称
                username:
                    type: string
                    description: 用户名
                refreshToken:
                    type: string
                    description: refreshToken
                expires:
                    type: string
                    description: 过期时间
                phone:
                    type: string
                    description: 手机号
                email:
                    type: string
                    description: 邮箱
                gender:
                    type: integer
                    description: 性别 0:保密 1:男 2:女
                    format: int32
                desc:
                    type: string
        UpdateUserRequest:
            type: object
            properties:
                nickname:
                    type: string
                    description: 用户ID
                password:
                    type: string
                    description: 密码
                avatar:
                    type: string
                    description: 头像
                gender:
                    type: integer
                    description: 性别
                    format: int32
                phone:
                    type: string
                    description: 手机
                status:
                    type: integer
                    description: 更新的状态 -1 注销（后台）
                    format: int32
                desc:
                    type: string
                    description: 描述
            description: 更新用户信息
        VerifyReply:
            type: object
            properties: {}
        VerifyRequest:
            type: object
            properties:
                email:
                    type: string
                    description: 邮箱
            description: 邮箱验证
tags:
    - name: User
